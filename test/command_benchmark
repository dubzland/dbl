#!/usr/bin/env bash

source "${BASH_SOURCE%/*}/../lib/hbl.bash" || exit

function _msg() {
  [[ $quiet -eq 1 ]] && return
  printf "$1" "${@:2}"
}

function SimpleCommand__init() {
  $this.super 'simple-command' || return

  $this.set_description 'A simple command.'             || return
  $this.examples.push   '-c /etc/simple.conf <options>' || return

  $Command__Option.new opt 'config_file'     || return
  $opt.set_type        'file'                || return
  $opt.set_short_flag  'c'                   || return
  $opt.set_long_flag   'config_file'         || return
  $opt.set_description 'Configuration file.' || return
  $opt.assign_reference command "$this"      || return

  $this.options.set 'config_file' "$opt"
}

$Command.extend SimpleCommand
$SimpleCommand.prototype_method __init SimpleCommand__init

function build_empty_command() {
  local cmd
  $Command.new cmd 'empty-command'
}

function build_simple_command() {
  local cmd opt

  $SimpleCommand.new cmd
}

declare -A command_samples
command_samples=(
  ['build_empty']='build_empty_command'
  ['build_simple']='build_simple_command'
)

function run_sample() {
  local i rc
  _msg ">>> %s <<<\n" "$1"
  for (( i=0; i<$2; i++)); do
    ${command_samples[$1]}
    rc=$?
    if [[ $rc -ne 0 ]]; then
      _msg "\r\033[KFAILED! [$rc]\n"
      return 1
    fi
    [[ $((i%10)) -eq 0 ]] && _msg "\r%d iterations complete." "$i"
  done
  _msg "\r\033[K"
}

function run_samples() {
  local sample count
  count=$1
  local -a samples=("${@:2}")

  for sample in "${samples[@]}"; do
    if [[ $quiet -eq 1 ]]; then
      run_sample "${sample}" $count
    else
      time run_sample "${sample}" $count
    fi
    _msg "\n\n"
  done
}

declare -i quiet
quiet=0

declare -i count
count=1000

declare opt

# Option parsing
while getopts qc: opt
do
  case "$opt" in
    q) quiet=1 ;;
    c) count=$OPTARG ;;
    \?) echo 'No arguments supplied'; exit 1 ;;
  esac
done

shift $((OPTIND-1))
unset OPTIND OPTARG opt

declare -a benchmark_samples
if [[ $# -gt 0 ]]; then
  benchmark_samples=("$@")
else
  benchmark_samples=("${!command_samples[@]}")
fi

_msg "STARTING BENCHMARK WITH %d iterations...\n" $count

run_samples $count "${benchmark_samples[@]}"

# vim: ts=2:sw=2:expandtab
